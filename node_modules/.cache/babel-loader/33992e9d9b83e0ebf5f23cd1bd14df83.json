{"ast":null,"code":"import _slicedToArray from \"/home/vladimir/react/mycatcafe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/vladimir/react/mycatcafe/src/components/ui/accordion/accordion.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport AccordionItem from \"./accordionItem\";\nimport { Ul } from \"@src/components/styled\";\nimport { StyledLi } from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Accordion(_ref) {\n  _s();\n\n  var _this = this;\n\n  var titleComponent = _ref.titleComponent,\n      textComponent = _ref.textComponent,\n      content = _ref.content,\n      isHtml = _ref.isHtml;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      openItemIndex = _useState2[0],\n      setOpenItemIndex = _useState2[1];\n\n  return /*#__PURE__*/_jsxDEV(Ul, {\n    children: content.map(function (item, index) {\n      return /*#__PURE__*/_jsxDEV(StyledLi, {\n        children: /*#__PURE__*/_jsxDEV(AccordionItem, {\n          titleComponent: titleComponent,\n          textComponent: textComponent,\n          title: item.title,\n          text: item.description,\n          open: index === openItemIndex,\n          onClick: function onClick() {\n            setOpenItemIndex(index !== openItemIndex ? index : null);\n          },\n          isHtml: isHtml\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, _this)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Accordion, \"7c3vg6EjUVh9WkgpUww9ID//Kic=\");\n\n_c = Accordion;\nexport default AccordionItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"Accordion\");","map":{"version":3,"sources":["/home/vladimir/react/mycatcafe/src/components/ui/accordion/accordion.jsx"],"names":["React","useState","AccordionItem","Ul","StyledLi","Accordion","titleComponent","textComponent","content","isHtml","openItemIndex","setOpenItemIndex","map","item","index","title","description","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,EAAT,QAAmB,wBAAnB;AACA,SAASC,QAAT,QAAyB,UAAzB;;AAEA,OAAO,SAASC,SAAT,OAKJ;AAAA;;AAAA;;AAAA,MAJDC,cAIC,QAJDA,cAIC;AAAA,MAHDC,aAGC,QAHDA,aAGC;AAAA,MAFDC,OAEC,QAFDA,OAEC;AAAA,MADDC,MACC,QADDA,MACC;;AACD,kBAA0CR,QAAQ,CAAC,IAAD,CAAlD;AAAA;AAAA,MAAOS,aAAP;AAAA,MAAsBC,gBAAtB;;AAEA,sBACE,QAAC,EAAD;AAAA,cACGH,OAAO,CAACI,GAAR,CAAY,UAACC,IAAD,EAAOC,KAAP;AAAA,0BACX,QAAC,QAAD;AAAA,+BACE,QAAC,aAAD;AACE,UAAA,cAAc,EAAER,cADlB;AAEE,UAAA,aAAa,EAAEC,aAFjB;AAGE,UAAA,KAAK,EAAEM,IAAI,CAACE,KAHd;AAIE,UAAA,IAAI,EAAEF,IAAI,CAACG,WAJb;AAKE,UAAA,IAAI,EAAEF,KAAK,KAAKJ,aALlB;AAME,UAAA,OAAO,EAAE,mBAAM;AACbC,YAAAA,gBAAgB,CAACG,KAAK,KAAKJ,aAAV,GAA0BI,KAA1B,GAAkC,IAAnC,CAAhB;AACD,WARH;AASE,UAAA,MAAM,EAAEL;AATV;AAAA;AAAA;AAAA;AAAA;AADF,SAAeI,IAAI,CAACI,EAApB;AAAA;AAAA;AAAA;AAAA,eADW;AAAA,KAAZ;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GA3BeZ,S;;KAAAA,S;AA6BhB,eAAeH,aAAf","sourcesContent":["import React, { useState } from \"react\";\nimport AccordionItem from \"./accordionItem\";\nimport { Ul } from \"@src/components/styled\";\nimport { StyledLi } from \"./styles\";\n\nexport function Accordion({\n  titleComponent, // компонент для отрисовки заголовка\n  textComponent, // компонент для отрисовки текста\n  content, // массив содержащий контент аккордеона\n  isHtml // есть ли HTML в текста\n}) {\n  const [openItemIndex, setOpenItemIndex] = useState(null);\n\n  return (\n    <Ul>\n      {content.map((item, index) => (\n        <StyledLi key={item.id}>\n          <AccordionItem\n            titleComponent={titleComponent}\n            textComponent={textComponent}\n            title={item.title}\n            text={item.description}\n            open={index === openItemIndex}\n            onClick={() => {\n              setOpenItemIndex(index !== openItemIndex ? index : null);\n            }}\n            isHtml={isHtml}\n          />\n        </StyledLi>\n      ))}\n    </Ul>\n  );\n}\n\nexport default AccordionItem;\n"]},"metadata":{},"sourceType":"module"}