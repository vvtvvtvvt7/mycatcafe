{"ast":null,"code":"import _slicedToArray from \"/home/vladimir/react/mycatcafe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/vladimir/react/mycatcafe/src/components/ui/accordion/accordionItem.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Button, Arrow, ContentWrapper, TitleWrapper, Wrapper } from \"./styles\"; // элемент аккордеона\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AccordionItem(_ref) {\n  _s();\n\n  var titleComponent = _ref.titleComponent,\n      title = _ref.title,\n      text = _ref.text,\n      open = _ref.open,\n      textComponent = _ref.textComponent,\n      onClick = _ref.onClick,\n      isHtml = _ref.isHtml;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      height = _useState2[0],\n      setHeight = _useState2[1];\n\n  var TitleComponent = titleComponent;\n  var TextComponent = textComponent || \"div\";\n  var contentWrapper = useRef(null);\n  useEffect(function () {\n    setHeight(contentWrapper.current.offsetHeight);\n  }, [text]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TitleWrapper, {\n      open: open,\n      children: [TitleComponent ? /*#__PURE__*/_jsxDEV(TitleComponent, {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 27\n      }, this) : title, /*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        onClick: onClick,\n        title: \"\".concat(open ? \"Скрыть\" : \"Раскрыть\", \" \\u043E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\"),\n        children: /*#__PURE__*/_jsxDEV(Arrow, {\n          open: open\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Wrapper, {\n      height: height,\n      open: open,\n      children: /*#__PURE__*/_jsxDEV(ContentWrapper, {\n        ref: contentWrapper,\n        children: [\" \", isHtml ? /*#__PURE__*/_jsxDEV(TextComponent, {\n          dangerouslySetInnerHTML: {\n            __html: text\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(TextComponent, {\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AccordionItem, \"fQTO2X/empvYqPEODhbtdXK//f4=\");\n\n_c = AccordionItem;\nexport default AccordionItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccordionItem\");","map":{"version":3,"sources":["/home/vladimir/react/mycatcafe/src/components/ui/accordion/accordionItem.jsx"],"names":["React","useState","useEffect","useRef","Button","Arrow","ContentWrapper","TitleWrapper","Wrapper","AccordionItem","titleComponent","title","text","open","textComponent","onClick","isHtml","height","setHeight","TitleComponent","TextComponent","contentWrapper","current","offsetHeight","__html"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,cAAxB,EAAwCC,YAAxC,EAAsDC,OAAtD,QAAqE,UAArE,C,CAEA;;;;;AACA,SAASC,aAAT,OAQG;AAAA;;AAAA,MAPDC,cAOC,QAPDA,cAOC;AAAA,MANDC,KAMC,QANDA,KAMC;AAAA,MALDC,IAKC,QALDA,IAKC;AAAA,MAJDC,IAIC,QAJDA,IAIC;AAAA,MAHDC,aAGC,QAHDA,aAGC;AAAA,MAFDC,OAEC,QAFDA,OAEC;AAAA,MADDC,MACC,QADDA,MACC;;AACD,kBAA4Bf,QAAQ,CAAC,CAAD,CAApC;AAAA;AAAA,MAAOgB,MAAP;AAAA,MAAeC,SAAf;;AACA,MAAMC,cAAc,GAAGT,cAAvB;AACA,MAAMU,aAAa,GAAGN,aAAa,IAAI,KAAvC;AACA,MAAMO,cAAc,GAAGlB,MAAM,CAAC,IAAD,CAA7B;AAEAD,EAAAA,SAAS,CAAC,YAAM;AACdgB,IAAAA,SAAS,CAACG,cAAc,CAACC,OAAf,CAAuBC,YAAxB,CAAT;AACD,GAFQ,EAEN,CAACX,IAAD,CAFM,CAAT;AAIA,sBACE;AAAA,4BACE,QAAC,YAAD;AAAc,MAAA,IAAI,EAAEC,IAApB;AAAA,iBACGM,cAAc,gBAAG,QAAC,cAAD;AAAA,kBAAiBR;AAAjB;AAAA;AAAA;AAAA;AAAA,cAAH,GAA8CA,KAD/D,eAEE,QAAC,MAAD;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,OAAO,EAAEI,OAFX;AAGE,QAAA,KAAK,YAAKF,IAAI,GAAG,QAAH,GAAc,UAAvB,sDAHP;AAAA,+BAKE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAEA;AAAb;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAWE,QAAC,OAAD;AAAS,MAAA,MAAM,EAAEI,MAAjB;AAAyB,MAAA,IAAI,EAAEJ,IAA/B;AAAA,6BACE,QAAC,cAAD;AAAgB,QAAA,GAAG,EAAEQ,cAArB;AAAA,mBACG,GADH,EAEGL,MAAM,gBACL,QAAC,aAAD;AAAe,UAAA,uBAAuB,EAAE;AAAEQ,YAAAA,MAAM,EAAEZ;AAAV;AAAxC;AAAA;AAAA;AAAA;AAAA,gBADK,gBAGL,QAAC,aAAD;AAAA,oBAAgBA;AAAhB;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA,kBADF;AAwBD;;GA1CQH,a;;KAAAA,a;AA4CT,eAAeA,aAAf","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { Button, Arrow, ContentWrapper, TitleWrapper, Wrapper } from \"./styles\";\n\n// элемент аккордеона\nfunction AccordionItem({\n  titleComponent, // компонент который нужно использовать для отрисовки заголовка\n  title, // содержимое заголовка\n  text, // содержимое текста\n  open, // открыт ли элемент\n  textComponent, // компонент который нужно использовать для отрисовки текста\n  onClick, // клик по кнопке раскрытия аккордеона\n  isHtml // является ли текст html разметкой\n}) {\n  const [height, setHeight] = useState(0);\n  const TitleComponent = titleComponent;\n  const TextComponent = textComponent || \"div\";\n  const contentWrapper = useRef(null);\n\n  useEffect(() => {\n    setHeight(contentWrapper.current.offsetHeight);\n  }, [text]);\n\n  return (\n    <>\n      <TitleWrapper open={open}>\n        {TitleComponent ? <TitleComponent>{title}</TitleComponent> : title}\n        <Button\n          type=\"button\"\n          onClick={onClick}\n          title={`${open ? \"Скрыть\" : \"Раскрыть\"} описание`}\n        >\n          <Arrow open={open} />\n        </Button>\n      </TitleWrapper>\n      <Wrapper height={height} open={open}>\n        <ContentWrapper ref={contentWrapper}>\n          {\" \"}\n          {isHtml ? (\n            <TextComponent dangerouslySetInnerHTML={{ __html: text }} />\n          ) : (\n            <TextComponent>{text}</TextComponent>\n          )}\n        </ContentWrapper>\n      </Wrapper>\n    </>\n  );\n}\n\nexport default AccordionItem;\n"]},"metadata":{},"sourceType":"module"}