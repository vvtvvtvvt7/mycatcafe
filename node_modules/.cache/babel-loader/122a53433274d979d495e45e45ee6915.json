{"ast":null,"code":"import _slicedToArray from \"/home/vladimir/react/mycatcafe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/vladimir/react/mycatcafe/src/components/ui/gallery/gallery.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport { SwiperSlide } from \"swiper/react\";\nimport SwiperCore, { Navigation, Thumbs } from \"swiper/core\";\nimport \"swiper/swiper.scss\";\nimport { ReactComponent as LeftArrow } from \"@svgr/webpack?-svgo,+titleProp,+ref!/src/assets/left-arrow.svg\";\nimport { SliderWrapper, StyledSwiper, StyledSwiperMini, StyleSlide, StyleSlideMini, StyledButtonLeft, StyledButtonRight, RightArrow } from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nSwiperCore.use([Navigation, Thumbs]);\n\nfunction Gallery(_ref) {\n  _s();\n\n  var _this = this;\n\n  var _ref$slides = _ref.slides,\n      slides = _ref$slides === void 0 ? [] : _ref$slides;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      thumbsSwiper = _useState2[0],\n      setThumbsSwiper = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      activeSlide = _useState4[0],\n      setActiveSlide = _useState4[1];\n\n  var navigationPrevRef = useRef(null);\n  var navigationNextRef = useRef(null);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(StyledSwiper, {\n      onSlideChange: function onSlideChange(slider) {\n        setActiveSlide(slider.realIndex);\n      },\n      spaceBetween: 20,\n      thumbs: {\n        swiper: thumbsSwiper\n      },\n      loop: true,\n      children: slides.map(function (slide) {\n        return /*#__PURE__*/_jsxDEV(SwiperSlide, {\n          children: /*#__PURE__*/_jsxDEV(StyleSlide, {\n            src: slide.src,\n            alt: slide.alt,\n            width: 728,\n            height: 408\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, _this)\n        }, slide.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SliderWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(StyledSwiperMini, {\n        onSwiper: function onSwiper(e) {\n          setThumbsSwiper(e);\n        },\n        spaceBetween: 20,\n        slidesPerView: 4,\n        freeMode: true,\n        watchSlidesProgress: true,\n        loop: true,\n        navigation: {\n          prevEl: navigationPrevRef.current,\n          nextEl: navigationNextRef.current\n        },\n        onBeforeInit: function onBeforeInit(swiper) {\n          swiper.params.navigation.prevEl = navigationPrevRef.current;\n          swiper.params.navigation.nextEl = navigationNextRef.current;\n        },\n        children: slides.map(function (slide, index) {\n          return /*#__PURE__*/_jsxDEV(SwiperSlide, {\n            children: /*#__PURE__*/_jsxDEV(StyleSlideMini, {\n              $active: activeSlide === index,\n              src: slide.src,\n              alt: slide.alt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, _this)\n          }, slide.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledButtonLeft, {\n        ref: navigationPrevRef,\n        children: /*#__PURE__*/_jsxDEV(LeftArrow, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledButtonRight, {\n        ref: navigationNextRef,\n        children: /*#__PURE__*/_jsxDEV(RightArrow, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Gallery, \"EDnZm51ri/r7l/KQMoVdAr1bIWU=\");\n\n_c = Gallery;\nexport default Gallery;\n\nvar _c;\n\n$RefreshReg$(_c, \"Gallery\");","map":{"version":3,"sources":["/home/vladimir/react/mycatcafe/src/components/ui/gallery/gallery.jsx"],"names":["React","useState","useRef","SwiperSlide","SwiperCore","Navigation","Thumbs","SliderWrapper","StyledSwiper","StyledSwiperMini","StyleSlide","StyleSlideMini","StyledButtonLeft","StyledButtonRight","RightArrow","use","Gallery","slides","thumbsSwiper","setThumbsSwiper","activeSlide","setActiveSlide","navigationPrevRef","navigationNextRef","slider","realIndex","swiper","map","slide","src","alt","id","e","prevEl","current","nextEl","params","navigation","index"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { SwiperSlide } from \"swiper/react\";\nimport SwiperCore, { Navigation, Thumbs } from \"swiper/core\";\nimport \"swiper/swiper.scss\";\nimport { ReactComponent as LeftArrow } from \"/src/assets/left-arrow.svg\";\n\nimport {\n  SliderWrapper,\n  StyledSwiper,\n  StyledSwiperMini,\n  StyleSlide,\n  StyleSlideMini,\n  StyledButtonLeft,\n  StyledButtonRight,\n  RightArrow\n} from \"./styles\";\n\nSwiperCore.use([Navigation, Thumbs]);\n\nfunction Gallery({\n  slides = [] // список слайдов каждый слайд это src картинки и alt\n}) {\n  const [thumbsSwiper, setThumbsSwiper] = useState(null);\n  const [activeSlide, setActiveSlide] = useState(0);\n  const navigationPrevRef = useRef(null);\n  const navigationNextRef = useRef(null);\n\n  return (\n    <>\n      <StyledSwiper\n        onSlideChange={(slider) => {\n          setActiveSlide(slider.realIndex);\n        }}\n        spaceBetween={20}\n        thumbs={{ swiper: thumbsSwiper }}\n        loop\n      >\n        {slides.map((slide) => (\n          <SwiperSlide key={slide.id}>\n            <StyleSlide\n              src={slide.src}\n              alt={slide.alt}\n              width={728}\n              height={408}\n            />\n          </SwiperSlide>\n        ))}\n      </StyledSwiper>\n      <SliderWrapper>\n        <StyledSwiperMini\n          onSwiper={(e) => {\n            setThumbsSwiper(e);\n          }}\n          spaceBetween={20}\n          slidesPerView={4}\n          freeMode\n          watchSlidesProgress\n          loop\n          navigation={{\n            prevEl: navigationPrevRef.current,\n            nextEl: navigationNextRef.current\n          }}\n          onBeforeInit={(swiper) => {\n            swiper.params.navigation.prevEl = navigationPrevRef.current;\n            swiper.params.navigation.nextEl = navigationNextRef.current;\n          }}\n        >\n          {slides.map((slide, index) => (\n            <SwiperSlide key={slide.id}>\n              <StyleSlideMini\n                $active={activeSlide === index}\n                src={slide.src}\n                alt={slide.alt}\n              />\n            </SwiperSlide>\n          ))}\n        </StyledSwiperMini>\n        <StyledButtonLeft ref={navigationPrevRef}>\n          <LeftArrow />\n        </StyledButtonLeft>\n        <StyledButtonRight ref={navigationNextRef}>\n          <RightArrow />\n        </StyledButtonRight>\n      </SliderWrapper>\n    </>\n  );\n}\n\nexport default Gallery;\n"]},"metadata":{},"sourceType":"module"}